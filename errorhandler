using UnityEngine;

public class PanelController : MonoBehaviour
{
    private bool isResizing = false;
    private Vector3 resizeStartScale;
    private float resizeSpeed = 2.0f;
    private Vector3 resizeTargetScale = new Vector3(1.5f, 1.5f, 1.5f);

    private bool isScaling = false;
    private float scaleSpeed = 0.1f;

    private bool isDragging = false;
    private Vector3 dragStartPosition;
    private float dragSpeed = 0.1f;

    private bool isRotating = false;
    private float rotationSpeed = 45.0f;

    private bool isFlipping = false;
    private float flipSpeed = 180.0f;

    public GameObject selectedPanelDisplay;

    void ResizeSelectedPanel()
    {
        if (isResizing)
        {
            float step = resizeSpeed * Time.deltaTime;
            selectedPanelDisplay.transform.localScale = Vector3.Lerp(selectedPanelDisplay.transform.localScale, resizeTargetScale, step);
        }
    }

    void StartResize()
    {
        isResizing = true;
        resizeStartScale = selectedPanelDisplay.transform.localScale;
    }

    void StopResize()
    {
        isResizing = false;
    }

    void HandleResizeInput()
    {
        if (OVRInput.GetDown(OVRInput.Button.PrimaryThumbstick))
        {
            StartResize();
        }

        if (OVRInput.GetUp(OVRInput.Button.PrimaryThumbstick))
        {
            StopResize();
        }
    }

    void ScaleSelectedPanel()
    {
        if (isScaling)
        {
            selectedPanelDisplay.transform.localScale += Vector3.one * scaleSpeed * Time.deltaTime;
        }
    }

    void StartScale()
    {
        isScaling = true;
    }

    void StopScale()
    {
        isScaling = false;
    }

    void HandleScaleInput()
    {
        if (OVRInput.GetDown(OVRInput.Button.SecondaryThumbstick))
        {
            StartScale();
        }

        if (OVRInput.GetUp(OVRInput.Button.SecondaryThumbstick))
        {
            StopScale();
        }
    }

    void HandleDragInput()
    {
        if (OVRInput.GetDown(OVRInput.Button.One))
        {
            StartDrag();
        }

        if (OVRInput.GetUp(OVRInput.Button.One))
        {
            StopDrag();
        }
    }

    void StartDrag()
    {
        isDragging = true;
        dragStartPosition = selectedPanelDisplay.transform.position;
    }

    void StopDrag()
    {
        isDragging = false;
    }

    void DragSelectedPanel()
    {
        if (isDragging)
        {
            Vector3 dragDirection = new Vector3(OVRInput.Get(OVRInput.Axis2D.PrimaryThumbstick).x, OVRInput.Get(OVRInput.Axis2D.PrimaryThumbstick).y, 0);
            selectedPanelDisplay.transform.position += dragDirection * dragSpeed * Time.deltaTime;
        }
    }

    void HandleRotationInput()
    {
        if (OVRInput.GetDown(OVRInput.Button.Two))
        {
            StartRotation();
        }

        if (OVRInput.GetUp(OVRInput.Button.Two))
        {
            StopRotation();
        }
    }

    void StartRotation()
    {
        isRotating = true;
    }

    void StopRotation()
    {
        isRotating = false;
    }

    void RotateSelectedPanel()
    {
        if (isRotating)
        {
            selectedPanelDisplay.transform.Rotate(Vector3.up, rotationSpeed * Time.deltaTime);
        }
    }

    void HandleFlipInput()
    {
        if (OVRInput.GetDown(OVRInput.Button.Three))
        {
            StartFlip();
        }

        if (OVRInput.GetUp(OVRInput.Button.Three))
        {
            StopFlip();
        }
    }

    void StartFlip()
    {
        isFlipping = true;
    }

    void StopFlip()
    {
        isFlipping = false;
    }

    void FlipSelectedPanel()
    {
        if (isFlipping)
        {
            selectedPanelDisplay.transform.Rotate(Vector3.right, flipSpeed * Time.deltaTime);
        }
    }

    void Update()
    {
        HandleResizeInput();
        HandleScaleInput();
        HandleDragInput();
        HandleRotationInput();
        HandleFlipInput();

        ResizeSelectedPanel();
        ScaleSelectedPanel();
        DragSelectedPanel();
        RotateSelectedPanel();
        FlipSelectedPanel();
    }
}
